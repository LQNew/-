/*
    描述
        一张CT扫描的灰度图像可以用一个N*N（0 < N <= 100）的矩阵描述，矩阵上的每个点对应一个灰度值（整数），其取值范围是0-255。
        我们假设给定的图像中有且只有一个肿瘤。在图上监测肿瘤的方法如下：如果某个点对应的灰度值小于等于50，则这个点在肿瘤上，否则不在肿瘤上。
        我们把在肿瘤上的点的数目加起来，就得到了肿瘤在图上的面积。任何在肿瘤上的点，如果它是图像的边界或者它的上下左右四个相邻点中至少有一个是非肿瘤上的点，
        则该点称为肿瘤的边界点。肿瘤的边界点的个数称为肿瘤的周长。现在给定一个图像，要求计算其中的肿瘤的面积和周长。
    输入
        输入第一行包含一个正整数N（0 < N <= 100），表示图像的大小；接下来N行，每行包含图像的一行。
        图像的一行用N个整数表示（所有整数大于等于0，小于等于255），两个整数之间用一个空格隔开。
    输出
        输出只有一行，该行包含两个正整数，分别为给定图像中肿瘤的面积和周长，用一个空格分开。
*/
//分析：本道题就是遍历图，难度不大，处理边界问题即可！
#include<iostream>
using namespace std;
int N;
int map1[100][100];
bool judge(int i,int j){
    if(i==0||j==0||i==N-1||j==N-1) return true;
    else if(map1[i+1][j]>50||map1[i-1][j]>50||map1[i][j+1]>50||map1[i][j-1]>50) return true;
    return false;
}
int main(){
    cin>>N;
    int area=0;
    int length=0;
    for(int i=0;i<N;i++){
        for(int j=0;j<N;j++) cin>>map1[i][j];
    }
    for(int i=0;i<N;i++){
        for(int j=0;j<N;j++){
            if(map1[i][j]<=50){
                area+=1;
                if(judge(i,j)) length+=1;
            }
        }
    }
    cout<<area<<" "<<length<<endl;
    return 0;
}
